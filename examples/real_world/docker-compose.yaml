version: "3.9"

services:
  api:
    profiles: [ "api" ]
    container_name: asgi-monitor.api
    hostname: asgi-monitor.api
    build:
      context: .
    restart: unless-stopped
    expose:
      - "8080"
    ports:
      - "8080:8080"
    depends_on:
      tempo:
        condition: service_started
    networks:
      - asgi-monitor.grafana.network
      - asgi-monitor.api.network
    command: [ "python", "-Om", "app.main" ]
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsSL http://localhost:8080/healthcheck" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 10s

  grafana:
    profiles: [ "grafana" ]
    image: grafana/grafana:latest
    container_name: asgi-monitor.grafana
    hostname: asgi-monitor.grafana
    restart: unless-stopped
    expose:
      - "3000"
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      - asgi-monitor.grafana.network
    volumes:
      - asgi-monitor.grafana.data:/var/lib/grafana:rw
      - ./grafana/provisioning:/etc/grafana/provisioning:rw
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DATABASE_WAL=true
      - VIRTUAL_HOST=crypto_trader.grafana
      - NETWORK_ACCESS=internal
      - VIRTUAL_PORT=3000

  loki:
    profiles: [ "grafana" ]
    image: grafana/loki:2.7.3
    container_name: asgi-monitor.loki
    hostname: asgi-monitor.loki
    expose:
      - "3100"
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml:ro
      - asgi-monitor.loki.data:/tmp/:rw
    command: -config.file=/etc/loki/config.yaml
    restart: unless-stopped
    networks:
      - asgi-monitor.grafana.network

  vector:
    profiles: [ "grafana" ]
    image: timberio/vector:0.27.0-alpine
    container_name: asgi-monitor.vector
    hostname: asgi-monitor.vector
    restart: unless-stopped
    expose:
      - "8383"
    networks:
      - asgi-monitor.grafana.network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./vector/vector.toml:/etc/vector/vector.toml:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  tempo:
    profiles: [ "grafana" ]
    image: grafana/tempo:2.0.1
    container_name: asgi-monitor.tempo
    hostname: asgi-monitor.tempo
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    restart: unless-stopped
    ports:
      - "14250:14250"
    networks:
      - asgi-monitor.grafana.network
    depends_on:
      - loki

  prometheus:
    profiles: [ "grafana" ]
    image: prom/prometheus:latest
    container_name: asgi-monitor.prometheus
    hostname: asgi-monitor.prometheus
    restart: unless-stopped
    networks:
      - asgi-monitor.grafana.network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - asgi-monitor.prometheus.data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
    ports:
      - "9090:9090"
    expose:
      - 9090

volumes:
  asgi-monitor.grafana.data: {}
  asgi-monitor.loki.data: {}
  asgi-monitor.prometheus.data: {}


networks:
  asgi-monitor.api.network: {}
  asgi-monitor.grafana.network: {}
